# -*- coding: utf-8 -*-
"""probX.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uX5YJ9hVYww1gbnKYBiN1emVgo-V2grW
"""

import pandas as pd
df = pd.read_csv('data7-1.csv', header=None)
data_array = df.to_numpy()

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

# Fit a normal distribution to the data
mu, std = norm.fit(data_array.squeeze())

# Plot the histogram
plt.figure(figsize=(8, 6))
plt.hist(data_array, bins=30, density=True, alpha=0.7, color='lightblue')

# Plot the PDF using the fitted parameters
xmin, xmax = plt.xlim()
x_vals = np.linspace(xmin, xmax, 100)
p = norm.pdf(x_vals, mu, std)
plt.plot(x_vals, p, 'k', linewidth=2)

# Calculate the mean salary
mean_salary = mu
print("Mean Annual Salary (W~):", mean_salary)

# Calculate the fraction of population with salaries between 0.75W~ and W
lower_bound = 0.75 * mean_salary
upper_bound = mean_salary
fraction_population = norm.cdf(upper_bound, mu, std) - norm.cdf(lower_bound, mu, std)
print("Fraction of population with salaries between 0.75W~ and W:", fraction_population)

# Annotate the plot with the mean salary and fraction
plt.text(mean_salary, 0, f'Mean Salary (W~): {mean_salary:.2f}\n', va='bottom', ha='center', color='red')
plt.text((upper_bound + lower_bound) / 2, 0, f'Fraction (X): {fraction_population:.2%}', va='bottom', ha='center', color='green')

plt.title('Histogram with Probability Density Function (PDF)')
plt.xlabel('Value')
plt.ylabel('Density')
plt.grid(True)

plt.show()





